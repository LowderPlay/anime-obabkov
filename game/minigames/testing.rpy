style title_text:
    font "fonts/NineteenEightySeven.ttf"
    color "#dfe8e2"
    size 35
    
style text_style:
    font "fonts/NineteenEightySeven.ttf"
    color "#dfe8e2"
    size 25

style button_style is text_style:
    idle_color "#616161"
    hover_color "#ffffff"

style button:
    size 30

screen testing_screen:
    frame:
        align (0.5, 0.5)
        xysize (1000, 500)
        text "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π:" style "title_text":
            align (0.5, 0.1)

        vbox:
            spacing 50
            align (0.5, 0.5)

            hbox:
                align (0.5, 0.5)
                spacing 10
                for i in range(max_sequence_length):
                    fixed:
                        xysize (50, 50)
                        if len(current_sequence) > i:
                            text current_sequence[i] style "title_text"
                        else:
                            text "_" style "title_text"
                imagebutton:
                    idle "UI/backspace.png"
                    hover "UI/backspace_inactive.png"
                    action Function(erase_last)
      
            hbox:
                align (0.5, 0.5)
                text "–î–µ–π—Å—Ç–≤–∏—è: " style "title_text"
                spacing 10
                for char, sound in zip(allowed_chars, sounds):
                    fixed:
                        xysize (50, 50)
                        textbutton char:
                            style "button"
                            idle_background "UI/button.png"
                            hover_background "UI/button_active.png"
                            if len(current_sequence) < max_sequence_length:
                                action [IncrementVariable("current_sequence", amount=char), Play("sound", f"audio/games/yana/{sound}")]

            if error != "":
                hbox:
                    text "–û—à–∏–±–∫–∞: " color "#ff0000" style "text_style"
                    text error style "text_style"

        hbox:
            ypos 430
            spacing 10
            textbutton "–æ—á–∏—Å—Ç–∏—Ç—å" text_style "button_style":
                action [SetVariable("current_sequence", ""), SetVariable("error", "")]
            textbutton "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å" text_style "button_style":
                action Function(check_sequence)
                # button:
                    # child Text("123")

default max_sequence_length = 10
default current_sequence = ""
default allowed_chars = "üèπüî™ü§úü¶∂üçî"
default sounds = ["bow.wav", "knife.wav", "hit.wav", "kick.wav", "food.wav"]
default error = ""

python early:
    def erase_last():
        global current_sequence
        current_sequence = current_sequence[:-1]

    def check_sequence():
        global current_sequence, error
        if len(current_sequence) < 7:
            error = "–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ —Å–µ–º–∏ –¥–µ–π—Å—Ç–≤–∏–π"
        elif current_sequence.count(current_sequence[0]) == len(current_sequence):
            error = "–¥–µ–π—Å—Ç–≤–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º–∏"
        elif "ü§ú" not in current_sequence:
            error = "–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã 1 –¥–µ–π—Å—Ç–≤–∏–µ ü§ú"
        elif "ü§úü§ú" in current_sequence:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ü§ú –¥–≤–∞ —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥ - —É—Å—Ç–∞–Ω–µ—à—å"
        elif current_sequence.count("üèπ") > 3:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üèπ –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Ä–∞–∑ - —Å—Ç—Ä–µ–ª—ã –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è"
        elif current_sequence[0] != "üçî":
            error = "–ø–µ—Ä–µ–¥ –±–∏—Ç–≤–æ–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫—É—Å–∏—Ç—å üçî"
        elif current_sequence.count("üçî") > 1:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üçî –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ - –æ–±—ä–µ—à—å—Å—è"
        elif "üèπüî™" in current_sequence or "üî™üèπ" in current_sequence:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üî™ –∏ üèπ —Ä—è–¥–æ–º - —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –º–µ–Ω—è—Ç—å –æ—Ä—É–∂–∏–µ"
        elif "ü§úü¶∂" in current_sequence or "ü¶∂ü§ú" in current_sequence:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ü¶∂ –∏ ü§ú —Ä—è–¥–æ–º - –º–æ–∂–Ω–æ –ø–æ—Ç–µ—Ä—è—Ç—å —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ"
        elif "ü¶∂" not in current_sequence:
            error = "–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã 1 –¥–µ–π—Å—Ç–≤–∏–µ ü¶∂ - –Ω—É–∂–Ω–æ —Ä–∞–∑–º—è—Ç—å –Ω–æ–≥–∏"
        elif current_sequence.count("ü§ú") > 2:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ü§ú –±–æ–ª—å—à–µ –¥–≤—É—Ö —Ä–∞–∑ - —Ä—É–∫–∏ —É—Å—Ç–∞–Ω—É—Ç"
        elif current_sequence.count("ü¶∂") > 3:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ü¶∂ –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Ä–∞–∑ - –Ω–æ–≥–∏ —É—Å—Ç–∞–Ω—É—Ç"
        elif "üî™" in current_sequence and (current_sequence[0] == "üî™" or not all([x != "üî™" or current_sequence[i] == "ü§ú" for i, x in enumerate(current_sequence[1:])])):
            error = "–ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º üî™ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ü§ú"
        elif current_sequence.count("üî™") > 2:
            error = "–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üî™ –±–æ–ª—å—à–µ –¥–≤—É—Ö —Ä–∞–∑ - –º–æ–∂–Ω–æ –ø–æ—Ä–µ–∑–∞—Ç—å—Å—è"
        else:
            renpy.end_interaction("")